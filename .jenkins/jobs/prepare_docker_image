pipeline {
    agent any
    parameters {
        string(name: 'flow_to_execute', defaultValue: 'named_entity_recognition', description: 'The flow use-case to execute')
        string(name: 'deploy_environment', defaultValue: 'dev', description: 'Execution Environment')
    }

    stages {
    stage('Azure Login') {
            steps {
                withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
                    sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID'
                }
            }
        }

    stage('Create local promptflow connections') {
            steps {
            withCredentials(['COMMON_DEV_CONNECTIONS']) {
                withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
                    withPythonEnv('/usr/bin/python3.9') {
                    sh '''
                    python -m pip install -r .jenkins/requirements/execute_job_requirements.txt
                    python -m llmops.common.prompt_local_connections \\
                    --env_name $deploy_environment \\
                    --connection_details $COMMON_DEV_CONNECTIONS \\
                    --flow_to_execute $flow_to_execute
                    '''
                }
            }
            }
            }
        }

    stage('Create Docker Image') {
            steps {
            withCredentials([azureServicePrincipal('AZURE_CREDENTIALS')]) {
            withPythonEnv('/usr/bin/python3.9') {
                sh '''
                    python -m pip install -r .jenkins/requirements/build_validation_requirements.txt
                    # Your Docker image creation command here
                    /bin/bash ./llmops/common/scripts/gen_docker_image.sh --flow_to_execute $flow_to_execute --deploy_environment $deploy_environment --build_id "$BUILD_NUMBER"
                '''
            }
            }
            }
        }
    }
}